@page "/Scenarios/{slug}"
@model Web.Pages.Scenarios.DetailsModel
@{
    ViewData["Title"] = Model.Scenario?.Title ?? "Сценарий";
}

@if (Model.Scenario is null)
{
    <div class="text-red-700">Сценарий не найден.</div>
}
else
{
    <article class="prose max-w-none">
        <h1 class="mb-2">@Model.Scenario.Title</h1>
        <p class="text-slate-600">@Model.Scenario.Description</p>
        <div class="text-sm text-slate-500 mt-2">
            Теги: @Model.Scenario.Tags • Сложность: @Model.Scenario.Difficulty
        </div>
    </article>

    <div class="mt-6 flex gap-3 items-center">
        @* Основной путь: серверный POST-хендлер *@
        <form method="post" asp-page-handler="Start" class="inline">
            @Html.AntiForgeryToken()
            <input type="hidden" name="slug" value="@Model.Scenario.Slug" />
            <button class="px-4 py-2 rounded bg-blue-600 text-white">
                Начать прохождение
            </button>
        </form>

        <a class="px-4 py-2 rounded border" href="/">Назад к списку</a>

        @* Опционально: fallback через API (по GUID сценария) *@
        <button type="button"
                class="px-3 py-2 rounded border text-slate-700"
                onclick="startViaApi('@Model.Scenario.Id')">
            Запустить через API
        </button>
    </div>

    <div id="err" class="text-red-700 mt-3" hidden></div>
}

@section Scripts {
<script>
/**
 * Fallback: старт через REST API, затем редирект на Play.
 * Если ваш API защищён cookie-аутошификацией, CSRF не требуется;
 * если включён [ValidateAntiForgeryToken] на API — добавьте заголовок RequestVerificationToken.
 */
async function startViaApi(scenarioId) {
  try {
    const r = await fetch('/api/attempts/start', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ scenarioId })
    });
    if (!r.ok) throw new Error('HTTP ' + r.status);
    const data = await r.json();
    const id = data?.id ?? data?.attemptId;
    if (!id) throw new Error('Не удалось получить идентификатор попытки.');
    window.location.href = `/Attempts/Play/${id}`;
  } catch (e) {
    const el = document.getElementById('err');
    el.textContent = 'Ошибка запуска попытки: ' + e.message;
    el.hidden = false;
  }
}
</script>
}
